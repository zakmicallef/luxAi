import { LuxMatchConfigs } from '../types';
import { Game } from '../Game';
import { Action } from '../Actions';
export declare abstract class Actionable {
    configs: Readonly<LuxMatchConfigs>;
    currentActions: Array<Action>;
    /** cooldown for this object before it can act */
    cooldown: number;
    constructor(configs: Readonly<LuxMatchConfigs>);
    /**
     * Process all commands for this actionable object in the match. It expects all given commands are completely valid
     * and can be run.
     */
    abstract turn(game: Game): void;
    /**
     * Checks if the cooldown is low enough to act again
     */
    canAct(): boolean;
    /**
     * Game runs this function
     */
    handleTurn(game: Game): void;
    giveAction(action: Action): void;
}
