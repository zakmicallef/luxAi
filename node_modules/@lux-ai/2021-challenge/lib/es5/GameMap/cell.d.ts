import { Resource } from '../Resource';
import { Unit } from '../Unit';
import { CityTile } from '../Game/city';
import { LuxMatchConfigs } from '../types';
import { Position } from './position';
/**
 * Cell class for map cells
 *
 * Some restrictions not explicitly employed:
 * Cell can either be empty (no resource or citytile), or have a resource, or have a citytile, not multiple.
 * There may be multiple units but this is only allowed on city tiles
 */
export declare class Cell {
    configs: Readonly<LuxMatchConfigs>;
    resource: Resource;
    citytile: CityTile;
    /** map from unit id to the unit on this tile */
    units: Map<string, Unit>;
    pos: Position;
    /** How much a units cooldown goes down on this tile. This is higher if there are more developed roads */
    road: number;
    constructor(x: number, y: number, configs: Readonly<LuxMatchConfigs>);
    /**
     * Set resource at cell and the amount of it
     * @param resourceType
     * @param amount
     */
    setResource(resourceType: Resource.Types, amount: number): Resource;
    hasResource(): boolean;
    /** Marks this as a city tile with the specified team */
    setCityTile(team: Unit.TEAM, cityid: string): void;
    isCityTile(): boolean;
    hasUnits(): boolean;
    getRoad(): number;
}
export declare namespace Cell { }
