"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cell = void 0;
var Resource_1 = require("../Resource");
var city_1 = require("../Game/city");
var position_1 = require("./position");
/**
 * Cell class for map cells
 *
 * Some restrictions not explicitly employed:
 * Cell can either be empty (no resource or citytile), or have a resource, or have a citytile, not multiple.
 * There may be multiple units but this is only allowed on city tiles
 */
var Cell = /** @class */ (function () {
    function Cell(x, y, configs) {
        this.configs = configs;
        this.resource = null;
        this.citytile = null;
        /** map from unit id to the unit on this tile */
        this.units = new Map();
        /** How much a units cooldown goes down on this tile. This is higher if there are more developed roads */
        this.road = 0;
        this.pos = new position_1.Position(x, y);
        this.road = this.configs.parameters.MIN_ROAD;
    }
    /**
     * Set resource at cell and the amount of it
     * @param resourceType
     * @param amount
     */
    Cell.prototype.setResource = function (resourceType, amount) {
        this.resource = new Resource_1.Resource(resourceType, amount);
        return this.resource;
    };
    Cell.prototype.hasResource = function () {
        return this.resource !== null && this.resource.amount > 0;
    };
    /** Marks this as a city tile with the specified team */
    Cell.prototype.setCityTile = function (team, cityid) {
        this.citytile = new city_1.CityTile(team, this.configs);
        this.citytile.pos = this.pos;
        this.citytile.cityid = cityid;
    };
    Cell.prototype.isCityTile = function () {
        return this.citytile !== null;
    };
    Cell.prototype.hasUnits = function () {
        return this.units.size !== 0;
    };
    Cell.prototype.getRoad = function () {
        if (this.isCityTile()) {
            return this.configs.parameters.MAX_ROAD;
        }
        else {
            return this.road;
        }
    };
    return Cell;
}());
exports.Cell = Cell;
//# sourceMappingURL=cell.js.map