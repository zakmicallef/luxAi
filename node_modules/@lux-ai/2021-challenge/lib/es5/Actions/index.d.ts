import { Game } from '../Game';
import { Resource } from '../Resource';
import { Cell } from '../GameMap/cell';
import { Unit } from '../Unit';
/**
 * Internal representations of agent sent actions. All actions must be validated prior to construction
 */
export declare abstract class Action {
    action: Game.ACTIONS;
    team: Unit.TEAM;
    constructor(action: Game.ACTIONS, team: Unit.TEAM);
}
export declare class MoveAction extends Action {
    unitid: string;
    direction: Game.DIRECTIONS;
    newcell: Cell;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, unitid: string, direction: Game.DIRECTIONS, newcell: Cell);
}
export declare abstract class SpawnAction extends Action {
    x: number;
    y: number;
    abstract type: Unit.Type;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, x: number, y: number);
}
export declare class SpawnCartAction extends SpawnAction {
    type: Unit.Type;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, x: number, y: number);
}
export declare class SpawnWorkerAction extends SpawnAction {
    type: Unit.Type;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, x: number, y: number);
}
export declare class SpawnCityAction extends Action {
    unitid: string;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, unitid: string);
}
export declare class TransferAction extends Action {
    srcID: string;
    destID: string;
    resourceType: Resource.Types;
    amount: number;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, srcID: string, destID: string, resourceType: Resource.Types, amount: number);
}
export declare class PillageAction extends Action {
    unitid: string;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, unitid: string);
}
export declare class ResearchAction extends Action {
    x: number;
    y: number;
    constructor(action: Game.ACTIONS, team: Unit.TEAM, x: number, y: number);
}
