import { Agent, Match, MatchEngine } from 'dimensions-ai';
import { GameMap } from '../GameMap';
import { Game } from '../Game';
import { LuxMatchResults, SerializedState } from '../types';
export declare class Replay {
    compressReplay: boolean;
    statefulReplay: boolean;
    out: string;
    replayFilePath: string;
    data: {
        seed: number;
        width: number;
        height: number;
        mapType: GameMap.Types;
        results?: LuxMatchResults;
        teamDetails: Array<{
            name: string;
            tournamentID: string;
        }>;
        allCommands: Array<Array<MatchEngine.Command>>;
        stateful?: Array<SerializedState>;
        version: string;
    };
    storeReplay: boolean;
    constructor(match: Match, compressReplay: boolean, statefulReplay: boolean, out: string);
    writeState(game: Game): void;
    writeTeams(agents: Agent[]): void;
    writeOut(results: LuxMatchResults): void;
}
