// any entity that has actions that are "a per unit" basis (not global) must extends this
export class Actionable {
    constructor(configs) {
        this.configs = configs;
        // array of actions to handle in turn function
        this.currentActions = [];
        /** cooldown for this object before it can act */
        this.cooldown = 0;
    }
    /**
     * Checks if the cooldown is low enough to act again
     */
    canAct() {
        return this.cooldown < 1;
    }
    /**
     * Game runs this function
     */
    handleTurn(game) {
        try {
            this.turn(game);
        }
        finally {
            this.currentActions = [];
        }
        // reset actions to empty
    }
    giveAction(action) {
        this.currentActions.push(action);
    }
}
//# sourceMappingURL=index.js.map