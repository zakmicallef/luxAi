import { Unit } from '../Unit';
import { Cell } from '../GameMap/cell';
import { LuxMatchConfigs } from '../types';
import { Game } from '.';
import { Actionable } from '../Actionable';
import { Position } from '../GameMap/position';
/**
 * A city is composed of adjacent city tiles of the same team
 */
export declare class City {
    team: Unit.TEAM;
    configs: Readonly<LuxMatchConfigs>;
    /**
     * fuel stored in city
     */
    fuel: number;
    /**
     * the map cells that compose this city
     */
    citycells: Array<Cell>;
    id: string;
    constructor(team: Unit.TEAM, configs: Readonly<LuxMatchConfigs>, idcount: number);
    getLightUpkeep(): number;
    getAdjacencyBonuses(): number;
    addCityTile(cell: Cell): void;
}
export declare class CityTile extends Actionable {
    team: Unit.TEAM;
    /** the id of the city this tile is a part of */
    cityid: string;
    pos: Position;
    /** dynamically updated counter for number of friendly adjacent city tiles */
    adjacentCityTiles: number;
    constructor(team: Unit.TEAM, configs: LuxMatchConfigs);
    getTileID(): string;
    canBuildUnit(): boolean;
    canResearch(): boolean;
    turn(game: Game): void;
    resetCooldown(): void;
}
