"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sprintf_js_1 = require("sprintf-js");
var DeepMerge_1 = require("../../../utils/DeepMerge");
var DeepCopy_1 = require("../../../utils/DeepCopy");
var ELO_1 = require("../../ELO");
var __1 = require("..");
var ELOSystem = /** @class */ (function (_super) {
    __extends(ELOSystem, _super);
    function ELOSystem(configs) {
        var _this = _super.call(this) || this;
        _this.configs = {
            startingScore: 1000,
            kFactor: 32,
        };
        _this.configs = DeepMerge_1.deepMerge(_this.configs, DeepCopy_1.deepCopy(configs));
        _this.elo = new ELO_1.ELOWrapper(_this.configs.kFactor, _this.configs.startingScore);
        return _this;
    }
    ELOSystem.prototype.initializeRankState = function () {
        return {
            rating: this.elo.createRating(),
        };
    };
    ELOSystem.prototype.onPlayerUpdate = function (rankState) {
        return {
            rating: this.elo.createRating(rankState.rating.score),
        };
    };
    ELOSystem.prototype.updateRanks = function (rankStates, relativeRanks) {
        var _this = this;
        var ratings = [];
        rankStates.forEach(function (rankState) {
            ratings.push(_this.elo.createRating(rankState.rating.score));
        });
        this.elo.rate(ratings, relativeRanks);
        return ratings.map(function (value) {
            return { rating: value };
        });
    };
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ELOSystem.prototype.resetRank = function (rankState) {
        return {
            rating: this.elo.createRating(),
        };
    };
    ELOSystem.prototype.rankComparator = function (rankState1, rankState2) {
        return rankState2.rating.score - rankState1.rating.score;
    };
    ELOSystem.prototype.getRankStatesHeaderString = function () {
        return sprintf_js_1.sprintf("%-30s | %-15s | %-15s | %-8s".underline, 'Name', 'ID', 'ELO Score', 'Matches');
    };
    ELOSystem.prototype.getRankStateString = function (player, rankState, matchesPlayed) {
        return sprintf_js_1.sprintf("%-30s".blue + " | %-15s | " + "%-15s".green + " | %-8s", player.tournamentID.name, player.tournamentID.id, rankState.rating.score, matchesPlayed);
    };
    return ELOSystem;
}(__1.RankSystem));
exports.ELOSystem = ELOSystem;
//# sourceMappingURL=index.js.map