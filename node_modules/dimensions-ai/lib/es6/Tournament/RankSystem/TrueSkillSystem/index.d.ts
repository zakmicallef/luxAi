import { DeepPartial } from '../../../utils/DeepPartial';
import { RankSystem } from '..';
import { Player } from '../..';
export declare class TrueSkillSystem extends RankSystem<TrueSkill.Configs, TrueSkill.RankState> {
    configs: TrueSkill.Configs;
    constructor(configs: DeepPartial<TrueSkill.Configs>);
    initializeRankState(): TrueSkill.RankState;
    private getScore;
    onPlayerUpdate(rankState: TrueSkill.RankState): TrueSkill.RankState;
    updateRanks(rankStates: Array<TrueSkill.RankState>, relativeRanks: Array<number>): Array<TrueSkill.RankState>;
    resetRank(rankState: TrueSkill.RankState): TrueSkill.RankState;
    rankComparator(rankState1: TrueSkill.RankState, rankState2: TrueSkill.RankState): number;
    getRankStatesHeaderString(): string;
    getRankStateString(player: Player, rankState: TrueSkill.RankState, matchesPlayed: number): string;
}
export declare namespace TrueSkill {
    interface Configs {
        /**
         * The initial Mu value players start with
         * @default `25`
         */
        initialMu: number;
        /**
         * The initial sigma value players start with
         * @default `25/3`
         */
        initialSigma: number;
    }
    interface RankState {
        /**
         * The trueskill rating
         */
        rating: {
            mu: number;
            sigma: number;
            score: number;
        };
    }
}
