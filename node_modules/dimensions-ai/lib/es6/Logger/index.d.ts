import colors from 'colors';
/**
 * Dimensions Logging Class
 */
export declare class Logger {
    level: Logger.LEVEL;
    /**
     * Identifier of who is logging this
     * @default 'Log'
     */
    identifier: string;
    /**
     * Color of the identifier string
     * @default Bold Green
     */
    identifierColor: colors.Color;
    /**
     * Logger Constructor
     * @param level - The logging level to use
     * @param identifier - an identifier to identify which logger is being called
     */
    constructor(level?: Logger.LEVEL, identifier?: string);
    getIdentifier(): string;
    bar(type?: string): string;
    importantBar(): void;
    important(...message: any[]): void;
    systemIObar(): void;
    systemIO(...message: any[]): void;
    systembar(): void;
    system(...message: any[]): void;
    detailbar(): void;
    detail(...message: any[]): void;
    infobar(): void;
    info(...message: any[]): void;
    warnbar(): void;
    warn(...message: any[]): void;
    errorbar(): void;
    error(...message: any[]): void;
    custom(label: string, level: Logger.LEVEL, ...message: any[]): void;
}
export declare namespace Logger {
    /**
     * Logging Levels where the order of levels are NONE, ERROR, ..., SYSTEM_IO, ALL
     */
    enum LEVEL {
        /** No logs */
        NONE = 0,
        /** Error logs */
        ERROR = 1,
        /** Warning logs */
        WARN = 2,
        /** Info logs */
        INFO = 3,
        /** Detail logs. For finer details above INFO and below SYSTEM */
        DETAIL = 4,
        /** System level logs */
        SYSTEM = 5,
        /** System IO logs. All I/O related details */
        SYSTEM_IO = 6,
        /** All logs */
        ALL = 7
    }
}
