var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import jwt from 'jsonwebtoken';
// eslint-disable-next-line @typescript-eslint/no-var-requires
require('dotenv').config();
/**
 * Generate a jwt for a user
 * @param user
 */
export const generateToken = (user) => {
    const u = {
        username: user.username,
        playerID: user.playerID,
        creationDate: user.creationDate,
    };
    // Return the JWT Token
    return jwt.sign(u, process.env.JWT_SECRET, {
        expiresIn: 7 * 60 * 60 * 24,
    });
};
/**
 * Verify a jwt
 * @param token - the jwt to verify
 */
export function verify(token) {
    return __awaiter(this, void 0, void 0, function* () {
        return new Promise((resolve, reject) => {
            jwt.verify(token, process.env.JWT_SECRET, (err, user) => {
                if (err)
                    reject(err);
                resolve(user);
            });
        });
    });
}
//# sourceMappingURL=utils.js.map