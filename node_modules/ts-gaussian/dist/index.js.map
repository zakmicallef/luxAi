{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// forked from https://github.com/tomgp/gaussian\n\n/**\n * Complementary error function\n * From Numerical Recipes in C 2e p221\n */\nexport function erfc(x: number): number {\n  const z = Math.abs(x);\n  const t = 1 / (1 + z / 2);\n  // prettier-ignore\n  const r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +\n          t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +\n          t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +\n          t * (-0.82215223 + t * 0.17087277)))))))));\n\n  return x >= 0 ? r : 2 - r;\n}\n\n/**\n * Inverse complementary error function\n * From Numerical Recipes 3e p265\n */\nexport function ierfc(x: number): number {\n  if (x >= 2) {\n    return -100;\n  }\n\n  if (x <= 0) {\n    return 100;\n  }\n\n  const xx = x < 1 ? x : 2 - x;\n  const t = Math.sqrt(-2 * Math.log(xx / 2));\n\n  // prettier-ignore\n  let r = -0.70711 * ((2.30753 + t * 0.27061) /\n          (1 + t * (0.99229 + t * 0.04481)) - t);\n\n  for (let j = 0; j < 2; j++) {\n    const err = erfc(r) - xx;\n    r += err / (1.12837916709551257 * Math.exp(-(r * r)) - r * err);\n  }\n\n  return x < 1 ? r : -r;\n}\n\n/**\n * Models the [Normal](http://en.wikipedia.org/wiki/Normal_distribution) (or Gaussian) distribution.\n */\nexport class Gaussian {\n  standardDeviation!: number;\n\n  constructor(public mean: number, public variance: number) {\n    if (variance <= 0) {\n      throw new Error(`Variance must be > 0 (but was ${variance})`);\n    }\n\n    this.standardDeviation = Math.sqrt(variance);\n  }\n\n  /**\n   * probability density function, which describes the probability\n   * of a random variable taking on the value _x_\n   */\n  pdf(x: number): number {\n    const m = this.standardDeviation * Math.sqrt(2 * Math.PI);\n    const e = Math.exp(-((x - this.mean) ** 2) / (2 * this.variance));\n    return e / m;\n  }\n\n  /**\n   * cumulative distribution function, which describes the probability of a\n   * random variable falling in the interval (−∞, _x_]\n   */\n  cdf(x: number): number {\n    return 0.5 * erfc(-(x - this.mean) / (this.standardDeviation * Math.sqrt(2)));\n  }\n\n  /**\n   * percent point function, the inverse of _cdf_\n   */\n  ppf(x: number): number {\n    return this.mean - this.standardDeviation * Math.sqrt(2) * ierfc(2 * x);\n  }\n\n  /**\n   * Product distribution of this and d (scale for constant)\n   * @returns the product distribution of this and the given distribution;\n   * equivalent to `scale(d)` when d is a constant\n   */\n  mul(d: number | Gaussian): Gaussian {\n    if (typeof d === 'number') {\n      return this.scale(d);\n    }\n\n    const precision = 1 / this.variance;\n    const dprecision = 1 / d.variance;\n    return this.fromPrecisionMean(\n      precision + dprecision,\n      precision * this.mean + dprecision * d.mean,\n    );\n  }\n\n  /**\n   * Quotient distribution of this and d (scale for constant)\n   * @returns the quotient distribution of this and the given distribution; equivalent to `scale(1/d)` when d is a constant\n   */\n  div(d: number | Gaussian): Gaussian {\n    if (typeof d === 'number') {\n      return this.scale(1 / d);\n    }\n\n    const precision = 1 / this.variance;\n    const dprecision = 1 / d.variance;\n    return this.fromPrecisionMean(\n      precision - dprecision,\n      precision * this.mean - dprecision * d.mean,\n    );\n  }\n\n  /**\n   * Addition of this and d\n   * @returns the result of adding this and the given distribution's means and variances\n   */\n  add(d: Gaussian): Gaussian {\n    return new Gaussian(this.mean + d.mean, this.variance + d.variance);\n  }\n\n  /**\n   * Subtraction of this and d\n   * @returns the result of subtracting this and the given distribution's means and variances\n   */\n  sub(d: Gaussian): Gaussian {\n    return new Gaussian(this.mean - d.mean, this.variance + d.variance);\n  }\n\n  /**\n   * Scale this by constant c\n   * @returns the result of scaling this distribution by the given constant\n   */\n  scale(c: number): Gaussian {\n    return new Gaussian(this.mean * c, this.variance * c * c);\n  }\n\n  fromPrecisionMean(precision: number, precisionmean: number): Gaussian {\n    return new Gaussian(precisionmean / precision, 1 / precision);\n  }\n}\n"]}